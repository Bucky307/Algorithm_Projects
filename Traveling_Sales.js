/*
Buck Harris
W10088465
11/29/2022
Sources Used:
https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array
https://stackoverflow.com/questions/16122381/the-shortest-distance-between-multiple-points
https://stackoverflow.com/questions/61626526/iterate-through-all-potential-starting-positions-in-held-karp-algorithm-utilizin
in class slides
Used sources from assignment 2 as well
*/

function tsp_ls(distance_matrix) {
  var rand;
  var pathCost;
  var minPath = Infinity; //initialize min
  for(var i=0;i<Math.pow(distance_matrix.length,6);i++) //
    {
      rand = randRoute(distance_matrix.length); //get a random path
      pathCost = twoOptSwapX(distance_matrix, rand); //find the cost of said path
      if (pathCost < minPath) //compare to min and change if necessary
      {
        minPath = pathCost; 
      }
    }
  return minPath; //return the minpast cost
}

//made for the limit on the for loop for tsp_ls didn't end up using as it took tooo long
/*function factorial(len)
  {
    if (len == 1 || len == 0)
      return 1;
    else return len * factorial(len-1);
  }
*/
function twoOptSwapX(cities, randRoute) // helper that decides the i and k and minimum route length
  {
    var minRoute = randRoute; // initialize minRoute
    var minDist = distance(cities, minRoute); // length of above route
    for(let i = 1; i < minRoute.length - 2; i++) // i from 1 to length-1
      {
        for(let k = i+1; k < minRoute.length-1 ; k++) //k from i+1 to length 
          {
            let twoSwap = twoOptSwap(minRoute, i, k); // do the swap thing
            let swapDist = distance(cities, twoSwap) //dist of swap
            if (swapDist < minDist) // change minDist and minRoute if better
            {
              minDist = swapDist;
              minRoute = swapDist;
            }
          }
      }
    return minDist; //return the minimum distance
     
  }

function twoOptSwap(route, i, k) //psudocode coded
{
  // the "slice" looks off, but it is just to account for the way that that function works. It works the same as how the psudocode works.
  var n = route.length;
  var sameOrder1 = route.slice(0, i);
  var rev = route.slice(i, k+1).reverse();
  var sameOrder2 = route.slice(k + 1, n);
  var newRoute = sameOrder1.concat(rev, sameOrder2);
  return newRoute;

}
function randRoute(len) //takes a length and makes into random route
{
  let array = Array.from(Array(len).keys()); // makes array from 0 to len
    for (var i = len - 1; i >= 0; i--) // randomizes the above array
    {
        var j = Math.floor(Math.random() * (i + 1));
        var temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
  return array; //returns random array
}
function distance(distance_matrix, path) // findes the distance of route from original graph
{
  var sum = 0;
  for(var i = 0; i < distance_matrix.length-1; i++)
  {
    sum += distance_matrix[path[i]][path[i+1]];
  }
  return sum;
}

//different graphs (same as problem 1)
let dist = [];
dist[2] = [
  [0,1,2],
  [1,0,2],
  [2,2,0]
];

dist[3] = [
  [0,4,1,3],
  [4,0,2,1],
  [1,2,0,5],
  [3,1,5,0]
];
dist[4] = [
  [0,4,1,3,1],
  [4,0,2,1,2],
  [1,2,0,5,3],
  [3,1,5,0,4],
  [1,2,3,4,0]
];
dist[5] = [
  [0,4,1,3,1,1],
  [4,0,2,1,2,2],
  [1,2,0,5,3,3],
  [3,1,5,0,4,4],
  [1,2,3,4,0,5],
  [1,2,3,4,5,0]
];
dist[6] = [
  [0,4,1,3,1,1,6],
  [4,0,2,1,2,2,5],
  [1,2,0,5,3,3,4],
  [3,1,5,0,4,4,3],
  [1,2,3,4,0,5,2],
  [1,2,3,4,5,0,1],
  [6,5,4,3,2,1,0]
];
dist[7] = [
  [0,4,1,3,1,1,6,2],
  [4,0,2,1,2,2,5,2],
  [1,2,0,5,3,3,4,3],
  [3,1,5,0,4,4,3,3],
  [1,2,3,4,0,5,2,4],
  [1,2,3,4,5,0,1,4],
  [6,5,4,3,2,1,0,7],
  [2,2,3,3,4,4,7,0]
];
dist[8] = [
  [0,4,1,3,1,1,6,2,9],
  [4,0,2,1,2,2,5,2,9],
  [1,2,0,5,3,3,4,3,9],
  [3,1,5,0,4,4,3,3,9],
  [1,2,3,4,0,5,2,4,9],
  [1,2,3,4,5,0,1,4,9],
  [6,5,4,3,2,1,0,7,9],
  [2,2,3,3,4,4,7,0,9],
  [9,9,9,9,9,9,9,9,0]
];
dist[9] = [
  [0,4,1,3,1,1,6,2,9,1],
  [4,0,2,1,2,2,5,2,9,2],
  [1,2,0,5,3,3,4,3,9,2],
  [3,1,5,0,4,4,3,3,9,1],
  [1,2,3,4,0,5,2,4,9,2],
  [1,2,3,4,5,0,1,4,9,1],
  [6,5,4,3,2,1,0,7,9,2],
  [2,2,3,3,4,4,7,0,9,1],
  [9,9,9,9,9,9,9,9,0,4],
  [1,2,2,1,2,1,2,1,4,0]
];
dist[10] = [
  [0,4,1,3,1,1,6,2,9,1,12],
  [4,0,2,1,2,2,5,2,9,2,12],
  [1,2,0,5,3,3,4,3,9,2,11],
  [3,1,5,0,4,4,3,3,9,1,1],
  [1,2,3,4,0,5,2,4,9,2,1],
  [1,2,3,4,5,0,1,4,9,1,5],
  [6,5,4,3,2,1,0,7,9,2,6],
  [2,2,3,3,4,4,7,0,9,1,0],
  [9,9,9,9,9,9,9,9,0,4,8],
  [1,2,2,1,2,1,2,1,4,0,7],
  [12,12,11,1,1,5,6,0,8,7,0]
];
dist[11] = [
  [0,4,1,3,1,1,6,2,9,1,12,7],
  [4,0,2,1,2,2,5,2,9,2,12,7],
  [1,2,0,5,3,3,4,3,9,2,11,7],
  [3,1,5,0,4,4,3,3,9,1,1,7],
  [1,2,3,4,0,5,2,4,9,2,1,7],
  [1,2,3,4,5,0,1,4,9,1,5,7],
  [6,5,4,3,2,1,0,7,9,2,6,7],
  [2,2,3,3,4,4,7,0,9,1,0,7],
  [9,9,9,9,9,9,9,9,0,4,8,7],
  [1,2,2,1,2,1,2,1,4,0,7,7],
  [12,12,11,1,1,5,6,0,8,7,0,7],
  [7,7,7,7,7,7,7,7,7,7,7,0]
];
dist[12] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0],
  [4,0,2,1,2,2,5,2,9,2,12,7,0],
  [1,2,0,5,3,3,4,3,9,2,11,7,0],
  [3,1,5,0,4,4,3,3,9,1,1,7,3],
  [1,2,3,4,0,5,2,4,9,2,1,7,3],
  [1,2,3,4,5,0,1,4,9,1,5,7,5],
  [6,5,4,3,2,1,0,7,9,2,6,7,5],
  [2,2,3,3,4,4,7,0,9,1,0,7,7],
  [9,9,9,9,9,9,9,9,0,4,8,7,1],
  [1,2,2,1,2,1,2,1,4,0,7,7,6],
  [12,12,11,1,1,5,6,0,8,7,0,7,8],
  [7,7,7,7,7,7,7,7,7,7,7,0,0],
  [0,0,0,3,3,5,5,7,1,8,0,0]
];
dist[13] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,6],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6],
  [0,0,0,3,3,5,5,7,1,8,0,0,6],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0]
];
dist[14] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0]
];
dist[15] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0]
];
dist[16] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0]
];
dist[17] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2,0],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2,0],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2,0],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2,0],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2,0],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2,0],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2,0],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2,0],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2,0],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2,0],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2,0],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2,0],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2,0],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2,0],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2,1],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2,0],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,9],
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0]
];
dist[18] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2,0,3],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2,0,3],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2,0,3],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2,0,3],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2,0,3],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2,0,2],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2,0,2],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2,0,2],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2,0,2],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2,0,2],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2,0,7],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2,0,7],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2,0,7],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2,0,7],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2,1,7],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2,0,0],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,9,0],
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0],
  [3,3,3,3,3,2,2,2,2,2,7,7,7,7,7,0,0,0,0]
];
dist[19] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2,0,3,20],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2,0,3,20],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2,0,3,20],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2,0,3,20],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2,0,3,20],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2,0,2,20],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2,0,2,20],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2,0,2,20],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2,0,2,20],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2,0,2,20],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2,0,7,20],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2,0,7,20],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2,0,7,20],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2,0,7,20],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2,1,7,20],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2,0,0,20],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,9,0,20],
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,20],
  [3,3,3,3,3,2,2,2,2,2,7,7,7,7,7,0,0,0,0,20],
  [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0]
];
dist[20] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2,0,3,20,1],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2,0,3,20,2],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2,0,3,20,3],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2,0,3,20,4],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2,0,3,20,5],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2,0,2,20,6],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2,0,2,20,7],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2,0,2,20,8],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2,0,2,20,9],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2,0,2,20,10],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2,0,7,20,11],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2,0,7,20,12],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2,0,7,20,13],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2,0,7,20,14],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2,1,7,20,15],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2,0,0,20,16],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,9,0,20,17],
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,20,18],
  [3,3,3,3,3,2,2,2,2,2,7,7,7,7,7,0,0,0,0,20,19],
  [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0]
];
dist[21] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2,0,3,20,1,6],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2,0,3,20,2,5],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2,0,3,20,3,6],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2,0,3,20,4,2],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2,0,3,20,5,2],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2,0,2,20,6,0],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2,0,2,20,7,0],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2,0,2,20,8,3],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2,0,2,20,9,5],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2,0,2,20,10,4],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2,0,7,20,11,3],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2,0,7,20,12,2],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2,0,7,20,13,1],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2,0,7,20,14,0],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2,1,7,20,15,8],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2,0,0,20,16,5],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,9,0,20,17,2],
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,20,18,8],
  [3,3,3,3,3,2,2,2,2,2,7,7,7,7,7,0,0,0,0,20,19,1],
  [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,1],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,5],
  [6,5,6,2,2,0,0,3,5,4,3,2,1,0,8,5,2,8,1,1,5,0]
];
dist[22] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2,0,3,20,1,6,12],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2,0,3,20,2,5,12],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2,0,3,20,3,6,12],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2,0,3,20,4,2,12],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2,0,3,20,5,2,12],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2,0,2,20,6,0,12],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2,0,2,20,7,0,12],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2,0,2,20,8,3,12],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2,0,2,20,9,5,12],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2,0,2,20,10,4,12],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2,0,7,20,11,3,12],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2,0,7,20,12,2,12],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2,0,7,20,13,1,12],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2,0,7,20,14,0,12],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2,1,7,20,15,8,12],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2,0,0,20,16,5,12],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,9,0,20,17,2,12],
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,20,18,8,12],
  [3,3,3,3,3,2,2,2,2,2,7,7,7,7,7,0,0,0,0,20,19,1,12],
  [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,1,12],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,5,12],
  [6,5,6,2,2,0,0,3,5,4,3,2,1,0,8,5,2,8,1,1,5,0,12],
  [12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0]
];
dist[23] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2,0,3,20,1,6,12,1],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2,0,3,20,2,5,12,1],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2,0,3,20,3,6,12,1],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2,0,3,20,4,2,12,1],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2,0,3,20,5,2,12,1],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2,0,2,20,6,0,12,1],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2,0,2,20,7,0,12,1],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2,0,2,20,8,3,12,1],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2,0,2,20,9,5,12,1],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2,0,2,20,10,4,12,1],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2,0,7,20,11,3,12,1],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2,0,7,20,12,2,12,1],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2,0,7,20,13,1,12,1],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2,0,7,20,14,0,12,1],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2,1,7,20,15,8,12,1],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2,0,0,20,16,5,12,1],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,9,0,20,17,2,12,1],
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,20,18,8,12,1],
  [3,3,3,3,3,2,2,2,2,2,7,7,7,7,7,0,0,0,0,20,19,1,12,1],
  [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,1,12,1],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,5,12,1],
  [6,5,6,2,2,0,0,3,5,4,3,2,1,0,8,5,2,8,1,1,5,0,12,1],
  [12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]
];
dist[24] = [
  [0,4,1,3,1,1,6,2,9,1,12,7,0,6,0,1,2,0,3,20,1,6,12,1,1],
  [4,0,2,1,2,2,5,2,9,2,12,7,0,6,0,2,2,0,3,20,2,5,12,1,2],
  [1,2,0,5,3,3,4,3,9,2,11,7,0,6,0,3,2,0,3,20,3,6,12,1,3],
  [3,1,5,0,4,4,3,3,9,1,1,7,3,6,0,4,2,0,3,20,4,2,12,1,4],
  [1,2,3,4,0,5,2,4,9,2,1,7,3,6,0,5,2,0,3,20,5,2,12,1,5],
  [1,2,3,4,5,0,1,4,9,1,5,7,5,6,0,6,2,0,2,20,6,0,12,1,6],
  [6,5,4,3,2,1,0,7,9,2,6,7,5,6,0,7,2,0,2,20,7,0,12,1,7],
  [2,2,3,3,4,4,7,0,9,1,0,7,7,6,0,8,2,0,2,20,8,3,12,1,8],
  [9,9,9,9,9,9,9,9,0,4,8,7,1,6,0,9,2,0,2,20,9,5,12,1,9],
  [1,2,2,1,2,1,2,1,4,0,7,7,6,6,0,10,2,0,2,20,10,4,12,1,10],
  [12,12,11,1,1,5,6,0,8,7,0,7,8,61,11,2,0,7,20,11,3,12,1,11],
  [7,7,7,7,7,7,7,7,7,7,7,0,0,6,55,12,2,0,7,20,12,2,12,1,12],
  [0,0,0,3,3,5,5,7,1,8,0,0,6,0,13,2,0,7,20,13,1,12,1,13],
  [6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,14,2,0,7,20,14,0,12,1,14],
  [0,0,0,0,0,0,0,0,0,0,61,55,0,0,0,15,2,1,7,20,15,8,12,1,15],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,2,0,0,20,16,5,12,1,16],
  [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,9,0,20,17,2,12,1,17],
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,20,18,8,12,1,18],
  [3,3,3,3,3,2,2,2,2,2,7,7,7,7,7,0,0,0,0,20,19,1,12,1,19],
  [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,1,12,1,20],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,5,12,1,21],
  [6,5,6,2,2,0,0,3,5,4,3,2,1,0,8,5,2,8,1,1,5,0,12,1,22],
  [12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,23],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,24],
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,0]
];

//output of all the data.
for (let i = 2; i < 25; i++)
  {
    var start = Date.now();
    var min = tsp_ls(dist[i]);
    var end = Date.now();
    console.log("The shortest tour for the " + (i+1) + "x" + (i+1) + " graph is: " + min);
    console.log("Time to complete: " + (end-start) + " ");
  }

